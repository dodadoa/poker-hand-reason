// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var App$PokerHandReason = require("../src/App.bs.js");

Jest.describe("sort card", (function (param) {
        Jest.test("1H 2H 3H 4H 5H -> 1H 2H 3H 4H 5H", (function (param) {
                var hand = /* :: */[
                  /* tuple */[
                    /* Two */0,
                    /* Heart */2
                  ],
                  /* :: */[
                    /* tuple */[
                      /* Three */1,
                      /* Heart */2
                    ],
                    /* :: */[
                      /* tuple */[
                        /* Four */2,
                        /* Heart */2
                      ],
                      /* :: */[
                        /* tuple */[
                          /* Five */3,
                          /* Heart */2
                        ],
                        /* :: */[
                          /* tuple */[
                            /* Six */4,
                            /* Heart */2
                          ],
                          /* [] */0
                        ]
                      ]
                    ]
                  ]
                ];
                return Jest.Expect[/* toEqual */12](hand, Jest.Expect[/* expect */0](App$PokerHandReason.sortCard(hand)));
              }));
        return Jest.test("2H 4S 4C 2D 4H -> 2_ 2_ 4_ 4_ 4_", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  /* tuple */[
                                    /* Two */0,
                                    /* Heart */2
                                  ],
                                  /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Diamond */1
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Four */2,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Club */0
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Heart */2
                                          ],
                                          /* [] */0
                                        ]
                                      ]
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](App$PokerHandReason.sortCard(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Four */2,
                                              /* Spade */3
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Club */0
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Two */0,
                                                  /* Diamond */1
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Four */2,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("fight", (function (param) {
        Jest.test("Black: 2H 3D 5S 9C KD and White: 2C 3H 4S 8C AH -> White win with high card Ace", (function (param) {
                return Jest.Expect[/* toEqual */12](/* White */Block.__(1, [/* HighCard */Block.__(0, [/* Ace */12])]), Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Nine */7,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* King */11,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Club */0
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Eight */6,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Ace */12,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("Black: 2H 4S 4C 2D 4H and White: 2S 8S AS QS 3S -> Black win with full house 4 over 2", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Black */Block.__(0, [/* FullHouse */Block.__(6, [/* Four */2])]), Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Four */2,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Club */0
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Four */2,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Spade */3
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Eight */6,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Ace */12,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Queen */10,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Three */1,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("Black: 2H 3D 5S 9C KD  White: 2C 3H 4S 8C KH -> Black win with high card 9", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Black */Block.__(0, [/* HighCard */Block.__(0, [/* Nine */7])]), Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Nine */7,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* King */11,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Club */0
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Eight */6,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* King */11,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("Black: 2H 3D 5S 9C KD  White: 2D 3H 5C 9S KH -> Tie", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Tie */0, Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Nine */7,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* King */11,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Club */0
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Club */0
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Nine */7,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* King */11,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("Black: 3H 3D 4S 4C 9D  White: 2D 2H 4D 4H 9S -> black win with 3", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Black */Block.__(0, [/* TwoPairs */Block.__(2, [/* tuple */[
                                    /* Three */1,
                                    /* Four */2
                                  ]])]), Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                    /* tuple */[
                                      /* Three */1,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ], /* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Diamond */1
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Diamond */1
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("Black: 2S 2C 4S 4C 9D  White: 2D 2H 4D 4H TS -> white win with 10", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* White */Block.__(1, [/* HighCard */Block.__(0, [/* Ten */8])]), Jest.Expect[/* expect */0](App$PokerHandReason.fight(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Two */0,
                                              /* Club */0
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Four */2,
                                                  /* Club */0
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Nine */7,
                                                    /* Diamond */1
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ], /* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Two */0,
                                              /* Heart */2
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Diamond */1
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Four */2,
                                                  /* Heart */2
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Ten */8,
                                                    /* Spade */3
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

/*  Not a pure module */
