// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");
var Rule$PokerHandReason = require("../src/Rule.bs.js");

Jest.describe("check pair", (function (param) {
        Jest.test("2H 2D 4C 4S 4H -> 2", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Pair */Block.__(1, [/* Two */0]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkPair(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Club */0
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Four */2,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2S 3S 4S 5S 6S -> None", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkPair(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Three */1,
                                              /* Spade */3
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Five */3,
                                                  /* Spade */3
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Six */4,
                                                    /* Spade */3
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check two pair", (function (param) {
        Jest.test("2H 3S 5H 8S 9C -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkTwoPair(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Heart */2
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Eight */6,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Club */0
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 2S 5H 5S 9C -> TwoPairs(2,5)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* TwoPairs */Block.__(2, [/* tuple */[
                                /* Two */0,
                                /* Five */3
                              ]]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkTwoPair(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Heart */2
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Club */0
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 2S 3H 4S 4C -> TwoPairs(2,4)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* TwoPairs */Block.__(2, [/* tuple */[
                                      /* Two */0,
                                      /* Four */2
                                    ]]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkTwoPair(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Two */0,
                                              /* Spade */3
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Three */1,
                                                /* Heart */2
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Four */2,
                                                  /* Spade */3
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Four */2,
                                                    /* Club */0
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check three of a kind", (function (param) {
        Jest.test("2H 3H 4H 5D 6S -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkThreeOfAKind(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Heart */2
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Six */4,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 2D 2S 5D 6S -> ThreeOfAKind(2)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* ThreeOfAKind */Block.__(3, [/* Two */0]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkThreeOfAKind(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Two */0,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Six */4,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 3D 4S 4D 4H -> ThreeOfAKind(4)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* ThreeOfAKind */Block.__(3, [/* Four */2]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkThreeOfAKind(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Three */1,
                                              /* Diamond */1
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Four */2,
                                                  /* Diamond */1
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Four */2,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check Straight", (function (param) {
        Jest.test("2H 4H 7S 8H JS -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Four */2,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Seven */5,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Eight */6,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Jack */9,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 3S 4S 5C 6S -> Straight(6)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Straight */Block.__(4, [/* Six */4]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraight(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Six */4,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("7H 8S 9S TC JS -> Straight(Jack)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Straight */Block.__(4, [/* Jack */9]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraight(/* :: */[
                                    /* tuple */[
                                      /* Seven */5,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Eight */6,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Nine */7,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Ten */8,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Jack */9,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("TS JH QC KC AC -> Straight(Ace)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* Straight */Block.__(4, [/* Ace */12]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraight(/* :: */[
                                          /* tuple */[
                                            /* Ten */8,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Jack */9,
                                              /* Heart */2
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Queen */10,
                                                /* Club */0
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* King */11,
                                                  /* Club */0
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Ace */12,
                                                    /* Club */0
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check Flush", (function (param) {
        Jest.test("2H 3C 4S 4C 5S -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFlush(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Five */3,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 3H 4H 5H 8H -> Flush(8)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* Flush */Block.__(5, [/* Eight */6]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFlush(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Three */1,
                                              /* Heart */2
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Heart */2
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Five */3,
                                                  /* Heart */2
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Eight */6,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check Full House", (function (param) {
        Jest.test("2H 3H 4S 7C 9C -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFullHouse(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Heart */2
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Seven */5,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Club */0
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 3C 4S 4C 4H -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFullHouse(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Four */2,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Four */2,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 2C 6S 6C 6H -> FullHouse(6)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* FullHouse */Block.__(6, [/* Six */4]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFullHouse(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Six */4,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Six */4,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Six */4,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 2C 2S 6C 6H -> FullHouse(2)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* FullHouse */Block.__(6, [/* Two */0]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFullHouse(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Two */0,
                                              /* Club */0
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Two */0,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Six */4,
                                                  /* Club */0
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Six */4,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check Four of a Kind", (function (param) {
        Jest.test("2H 4C 7S 8D 9D -> Some(2)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFourOfAKind(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Four */2,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Seven */5,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Eight */6,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 2C 2S 2D 9D -> FourOfAKind(2)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* FourOfAKind */Block.__(7, [/* Two */0]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFourOfAKind(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Two */0,
                                          /* Spade */3
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Diamond */1
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Diamond */1
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("3H 4C 4S 4D 4H -> FourOfAKind(4)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* FourOfAKind */Block.__(7, [/* Four */2]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkFourOfAKind(/* :: */[
                                          /* tuple */[
                                            /* Three */1,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Four */2,
                                              /* Club */0
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Four */2,
                                                  /* Diamond */1
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Four */2,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("check Straight flush", (function (param) {
        Jest.test("2H 3C 4D 7C 8S -> None", (function (param) {
                return Jest.Expect[/* toEqual */12](/* NotFound */0, Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraightFlush(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Three */1,
                                        /* Club */0
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Diamond */1
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Seven */5,
                                            /* Club */0
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Eight */6,
                                              /* Spade */3
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 3H 4H 5H 6H -> StraightFlush(6)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* StraightFlush */Block.__(8, [/* Six */4]), Jest.Expect[/* expect */0](Rule$PokerHandReason.checkStraightFlush(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Three */1,
                                              /* Heart */2
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Four */2,
                                                /* Heart */2
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Five */3,
                                                  /* Heart */2
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Six */4,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

Jest.describe("get highest card", (function (param) {
        Jest.test("2H 2D 4C 5S 6H -> Pair(2)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* Pair */Block.__(1, [/* Two */0]), Jest.Expect[/* expect */0](Rule$PokerHandReason.getHighestCard(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Diamond */1
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Four */2,
                                          /* Club */0
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Six */4,
                                              /* Heart */2
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("2H 2S 5H 5S 9C -> TwoPairs(2,5)", (function (param) {
                return Jest.Expect[/* toEqual */12](/* TwoPairs */Block.__(2, [/* tuple */[
                                /* Two */0,
                                /* Five */3
                              ]]), Jest.Expect[/* expect */0](Rule$PokerHandReason.getHighestCard(/* :: */[
                                    /* tuple */[
                                      /* Two */0,
                                      /* Heart */2
                                    ],
                                    /* :: */[
                                      /* tuple */[
                                        /* Two */0,
                                        /* Spade */3
                                      ],
                                      /* :: */[
                                        /* tuple */[
                                          /* Five */3,
                                          /* Heart */2
                                        ],
                                        /* :: */[
                                          /* tuple */[
                                            /* Five */3,
                                            /* Spade */3
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Nine */7,
                                              /* Club */0
                                            ],
                                            /* [] */0
                                          ]
                                        ]
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("2H 2C 6S 6C 6H -> FullHouse(6)", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* FullHouse */Block.__(6, [/* Six */4]), Jest.Expect[/* expect */0](Rule$PokerHandReason.getHighestCard(/* :: */[
                                          /* tuple */[
                                            /* Two */0,
                                            /* Heart */2
                                          ],
                                          /* :: */[
                                            /* tuple */[
                                              /* Two */0,
                                              /* Club */0
                                            ],
                                            /* :: */[
                                              /* tuple */[
                                                /* Six */4,
                                                /* Spade */3
                                              ],
                                              /* :: */[
                                                /* tuple */[
                                                  /* Six */4,
                                                  /* Club */0
                                                ],
                                                /* :: */[
                                                  /* tuple */[
                                                    /* Six */4,
                                                    /* Heart */2
                                                  ],
                                                  /* [] */0
                                                ]
                                              ]
                                            ]
                                          ]
                                        ])));
                    }));
      }));

/*  Not a pure module */
